#!/bin/sh

# Set some variables for better readability
BLUE='\033[0;34m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo "${BLUE}Running pre-commit hooks...${NC}"

# --- Prettier and Linter ---
echo "${BLUE}Formatting code with Prettier...${NC}"
yarn run prettier
echo "${BLUE}Linting code with ESLint...${NC}"
yarn run lint --fix

# --- Test File Detection ---
echo "${BLUE}Detecting staged test files...${NC}"
NEW_S_TEST_FILES=$(git diff --cached --name-only --diff-filter=A | grep -E '\.test\.(tsx|ts)$' || true)
NEW_D_TEST_FILES=$(git diff --cached --name-only --diff-filter=D | grep -E '\.test\.(tsx|ts)$' || true)


if [ -n "$NEW_D_TEST_FILES" ]; then
  echo "${GREEN}Removing timing data of deleted test suits from timing.json...${NC}"
  node scripts/updateTimings.mjs $NEW_D_TEST_FILES
  exit 0
fi

if [ -z "$NEW_S_TEST_FILES" ]; then
  echo "${RED}No new test files found. Skipping test execution.${NC}"
  exit 0
fi

# --- Test Execution ---
echo "${BLUE}Running tests for new staged files...${NC}"
echo "${GREEN}Files to test: $NEW_STAGED_TEST_FILES${NC}"
yarn test $NEW_STAGED_TEST_FILES --silent --json --outputFile=temp-test-results.json

# Check if the test command was successful
if [ $? -ne 0 ]; then
  echo "${RED}Tests failed. Aborting commit.${NC}"
  # Remove the temporary file if it was created
  if [ -f "temp-test-results.json" ]; then
    rm temp-test-results.json
  fi
  exit 1
fi

echo "${GREEN}Tests completed successfully.${NC}"

# --- Processing and Combining Results ---

echo "${BLUE}Combining new results into timing.json...${NC}"
node scripts/updateTimings.mjs --new temp-test-results.json --out timing.json

# --- Cleanup and Git Add ---
echo "${BLUE}Cleaning up temporary files...${NC}"
rm -f temp-test-results.json

echo "${GREEN}Adding updated timing.json to the commit...${NC}"
git add timing.json

echo "${GREEN}Pre-commit hooks finished successfully!${NC}"
