name: Run Tests
on:
    workflow_dispatch:
    pull_request:

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                shard: [1] # split into 15 parallel runners
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - name: Install dependencies
              run: yarn install --frozen-lockfile
            - name: Identify changed test files
              id: diff
              env:
                  BASE: ${{ github.event.pull_request.base.sha }}
                  HEAD: ${{ github.event.pull_request.head.sha }}
              run: |
                  echo "Comparing $BASE...$HEAD"
                  # Ensure we have both commits
                  git fetch origin ${{ github.event.pull_request.base.ref }}
                  git fetch origin ${{ github.event.pull_request.head.ref }}

                  # Get changed files containing "test"
                  files=$(git diff --name-only $BASE $HEAD | grep -E '\.test\.(ts|js|jsx|tsx)$' || true)
                  # Convert to space-separated string
                  files_space=$(echo $files | xargs)
                  echo "Found test files: $files_space"
                  # Export as variable for later steps
                  echo "CHANGED_TESTS=$files_space" >> $GITHUB_ENV
            - name: Run tests (sharded)
              env:
                  NODE_OPTIONS: "--max_old_space_size=8192"
              run: yarn test $(node scripts/shard.js -i${{ matrix.shard }} --file timing.json) --silent --verbose --coverage --coverageReporters=json --json --outputFile=report.json
            - name: Proccessing report
              run: node scripts/processor.js --input report.json --output timing.json
            - name: Upload coverage reports
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-shard-${{ matrix.shard }}
                  path: coverage/
                  retention-days: 1
            - name: Upload timing reports
              uses: actions/upload-artifact@v4
              with:
                  name: timing-shard-${{ matrix.shard }}
                  path: timing.json
                  retention-days: 1

    merge-coverage:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - name: Install dependencies
              run: yarn install --frozen-lockfile
            - name: Download all coverage reports
              uses: actions/download-artifact@v4
              with:
                  path: coverage-reports/
            - name: Merge coverage reports
              run: |
                  # Create merged coverage directory
                  mkdir -p merged-coverage

                  # Copy all coverage files to merge directory
                  # Find all coverage-final.json files and move them
                  find coverage-reports -name "coverage-final.json" -type f | while read -r file; do
                      # Get the parent directory name
                      parent_dir=$(basename "$(dirname "$file")")
                      # Move and rename the file
                      mv "$file" "merged-coverage/${parent_dir}.json"
                  done

                  # Merge coverage using nyc (assuming you're using nyc/istanbul)
                  npx nyc merge merged-coverage merged-coverage.json
                  npx nyc report --reporter=html --reporter=text --reporter=lcov --temp-dir=merged-coverage
            - name: Upload merged coverage
              uses: actions/upload-artifact@v4
              with:
                  name: merged-coverage-report
                  path: |
                      coverage/
                      merged-coverage.json
