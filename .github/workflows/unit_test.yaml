name: CI - Tests & Coverage

on:
    workflow_dispatch:
        inputs:
            shards:
                description: "Select number of shards to split tests"
                required: true
                default: "3"
                type: choice
                options:
                    - "1"
                    - "2"
                    - "4"
                    - "8"
                    - "12"
                    - "15"
    pull_request:

jobs:
    pre-processing:
        name: Generate Matrix & Prepare shards
        runs-on: ubuntu-latest
        outputs:
            shards: ${{ steps.set-shard-files.outputs.shards }}
        steps:
            # Checkout repository
            - name: Checkout code
              uses: actions/checkout@v3

            # Setup Node.js and install dependencies
            - name: Setup Node.js & Install dependencies
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            - name: Generate shard test files
              id: set-shard-files
              env:
                  SHARD_COUNT: ${{ github.event.inputs.shards || '3' }}
              run: |
                  FILES=$(node scripts/distributeTests.mjs --shards ${{ env.SHARD_COUNT }})
                  echo "shards=$FILES" >> "$GITHUB_OUTPUT"

    test-shards: # runs tests in parallel shards
        name: Test Shards
        runs-on: ubuntu-latest
        needs: pre-processing
        strategy:
            fail-fast: false
            matrix:
                shard: ${{ fromJSON(needs.pre-processing.outputs.shards) }}
        steps:
            # Checkout repository
            - name: Checkout code
              uses: actions/checkout@v3

            # Setup Node.js and install dependencies
            - name: Setup Node.js & Install dependencies
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: "yarn"
            - run: yarn install --frozen-lockfile

            # Run tests using sharding
            - name: Run tests
              env:
                  NODE_OPTIONS: "--max_old_space_size=8192"
              run: |
                  yarn test ${{ matrix.shard.files }} \
                    --silent --verbose \
                    --coverage \
                    --coverageReporters=json \
                    --passWithNoTests

              # Cache coverage artifact
            - name: Coverage
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-shard-${{ matrix.shard.index }}
                  path: coverage/coverage-final.json
                  retention-days: 1

    merge-coverage: # merges coverage results from all shards
        needs: test-shards
        name: Merge Coverage
        runs-on: ubuntu-latest
        steps:
            # Checkout repository
            - name: Checkout code
              uses: actions/checkout@v4

            # Setup Node.js and install dependencies
            - name: Setup Node.js & Install dependencies
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            # Download all coverage artifacts
            - name: Download coverage artifacts
              uses: actions/download-artifact@v4
              with:
                  path: coverage-reports/

            # Merge coverage reports from all shards
            - name: Merge coverage reports
              run: sh scripts/combine-coverage.sh

            # Upload final merged coverage report
            - name: Upload merged coverage
              uses: actions/upload-artifact@v4
              with:
                  name: merged-coverage-${{ github.ref_name }}-${{ github.run_id }}
                  path: |
                      coverage/
                      merged-coverage.json
